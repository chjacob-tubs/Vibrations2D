Successfully started  a `define' subprocess. 
checking output: `define' claimes to have ended normally.
checking output: File `control' exists.
checking output: File `control' looks fine at a first glance. (I've been checking for these variables: ['title', 'coord', 'atoms', 'basis', 'end'].)
checking output: File `coord' exists.
checking output: File `coord' looks fine at a first glance. (I've been checking for these variables: ['coord', 'end', 'redundant'].)
checking output: File `basis' exists.
checking output: File `basis' looks fine at a first glance. (I've been checking for these variables: ['basis', 'end'].)
checking output: File `mos' exists.
checking output: File `mos' looks fine at a first glance. (I've been checking for these variables: ['scfmo', 'end'].)
checking output: File `auxbasis' exists.
checking output: File `auxbasis' looks fine at a first glance. (I've been checking for these variables: ['jbas', 'end'].)
checking output: Found different `turbomole' version (expecting 6.3.x). Check output if everything still works.
checking output: `define' claims to have added 3 atoms as expected.
checking output: `define' still seems to accept `ired' as input.
checking output: `define' says nothing about user-defined bonds, this should be okay in versions >6.3.x.
checking output: `define' is concerned about basis sets for 3 atoms as expected.
checking output: `define' still seems to accept `b' as input to assign atomic basis sets.
checking output: At least, `define' didn't  complain about using `def2-SVP' as basis set for all atoms.
checking output: `define'  says, he write basis sets to `basis' as I expected him to.
checking output: `define' still seems to accept `eht' as input to select EHT for initial guess.
checking output: `define' asked for the charge as I expected.
checking output: `define' says, he found an initial guess for the occupation.
checking output: `define' was asking me to accept the occupation just as expected.
checking output: `define' still seems to  accept `dft' as input.
checking output: `define' still seems to accept `on' (for DFT) as input.
checking output: `define' still seems to accept `func' (to select the DFT functional as input.)
checking output: `define' still seems to accept `grid' (to select the DFT Grid as input.)
checking output: `define' still seems to accept `ri' as input.
checking output: `define' still seems to accept `on' (for RI) as input.
checking output: `define' still seems to accept `m' (for RI) as input.
checking output: `define' confirmed using 2000 MB for RI as expected.
checking output: I found the familiar `**** define : all done ****' statement.
`define' successfully quit on exit status 0.
I've checked `define's output and it looked fine. This is certainly no gurantee that it really did the right thing. If I were able to check this, I needn't even call it.
