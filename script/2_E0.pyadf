# PyADF script to generate grid structures and calculate anharmonic
# potentials

from VibTools.Constants import *
import numpy as np

### PATH TO ENERGY FILES

print('Energy files will be stored in: ')
enpath = os.path.join(pyadfenv.outdir,'energies')
if not os.path.exists(enpath):
    os.mkdir(enpath)

print()
print()
print('Calculating the reference energy E0')
print()

mol = molecule(os.path.join(pyadfenv.outdir,'coord'),inputformat='tmol')
settings = TurbomoleSinglePointSettings(verbose_level=2)

settings.set_basis_set('def2-SVP')
settings.set_dft_functional('b3-lyp')
settings.set_ri(False) # false for b3-lyp
settings.set_redundant_internal_coordinates(True)
#settings.set_dispersion_correction('dft-d3')
settings.set_scfiterlimit(500)
settings.set_dft_grid('m4')

use_cosmo = True
if use_cosmo:
    # cosmo settings for deuterium
    settings.set_cosmo(True)
    settings.set_cosmo_epsilon(77.49)
    settings.set_cosmo_rsolv(1.93)


job = TurbomoleSinglePointJob(mol,method='dft',settings=settings)
E0res = job.run()

dm = np.array(E0res.get_dipole_vector())* au_in_Debye
en = E0res.get_energy()

with open(os.path.join(enpath,'E0.dat'),'w+') as f:
    outline = str(en)+' '+str(dm[0])+' '+str(dm[1])+' '+str(dm[2])
    f.write(outline)